{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Rocketseat\\\\AulasNLW\\\\podcastrnext\\\\src\\\\contexts\\\\PlayContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(List, index) {\n    setEpisodeList(List);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  var hasPrevious = currentEpisodeIndex > 0;\n  var hasNext = currentEpisodeIndex + 1 < episodeList.length;\n\n  function playNext() {\n    if (hasNext) {\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  }\n\n  function playPrevious() {\n    if (hasPrevious) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      playPrevious: playPrevious,\n      play: play,\n      playList: playList,\n      playNext: playNext,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState,\n      hasNext: hasNext,\n      hasPrevious: hasPrevious\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["D:/Rocketseat/AulasNLW/podcastrnext/src/contexts/PlayContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","List","index","togglePlay","setPlayingState","state","hasPrevious","hasNext","length","playNext","playPrevious"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AA4BA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAGP,OAAO,SAASG,qBAAT,OAAwE;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;;AAAA,kBACrCH,QAAQ,CAAC,EAAD,CAD6B;AAAA,MACpEI,WADoE;AAAA,MACvDC,cADuD;;AAAA,mBAErBL,QAAQ,CAAC,CAAD,CAFa;AAAA,MAEpEM,mBAFoE;AAAA,MAE/CC,sBAF+C;;AAAA,mBAGzCP,QAAQ,CAAC,KAAD,CAHiC;AAAA,MAGpEQ,SAHoE;AAAA,MAGzDC,YAHyD;;AAK3E,WAASC,IAAT,CAAcC,OAAd,EAAuB;AACnBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAkD;AAC9CT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASM,UAAT,GAAsB;AAClBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAyC;AACrCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACH;;AAED,MAAMC,WAAW,GAAGZ,mBAAmB,GAAG,CAA1C;AACA,MAAMa,OAAO,GAAIb,mBAAmB,GAAG,CAAvB,GAA4BF,WAAW,CAACgB,MAAxD;;AAEA,WAASC,QAAT,GAAoB;AAChB,QAAIF,OAAJ,EAAa;AACbZ,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACC;AACJ;;AAED,WAASgB,YAAT,GAAwB;AACpB,QAAIJ,WAAJ,EAAiB;AACjBX,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACC;AACJ;;AAED,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BF,MAAAA,WAAW,EAAXA,WAD2B;AAE3BE,MAAAA,mBAAmB,EAAnBA,mBAF2B;AAG3BgB,MAAAA,YAAY,EAAZA,YAH2B;AAI3BZ,MAAAA,IAAI,EAAJA,IAJ2B;AAK3BE,MAAAA,QAAQ,EAARA,QAL2B;AAM3BS,MAAAA,QAAQ,EAARA,QAN2B;AAO3Bb,MAAAA,SAAS,EAATA,SAP2B;AAQ3BO,MAAAA,UAAU,EAAVA,UAR2B;AAS3BC,MAAAA,eAAe,EAAfA,eAT2B;AAU3BG,MAAAA,OAAO,EAAPA,OAV2B;AAW3BD,MAAAA,WAAW,EAAXA;AAX2B,KAA/B;AAAA,cAaKf;AAbL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzDeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\r\n\r\ntype Episode = {\r\n    title: string;\r\n    members: string;\r\n    thumbnail: string;\r\n    duration: number;\r\n    url: string;\r\n};\r\n\r\ntype PlayerContextData = {\r\n    episodeList: Episode[];\r\n    currentEpisodeIndex: number;\r\n    isPlaying: boolean;\r\n    play: (episodes: Episode) => void;\r\n    playList: (List: Episode[], index: number) => void;\r\n    setPlayingState: (state: boolean) => void;\r\n    togglePlay: () => void;\r\n    playPrevious: () => void;\r\n    playNext: () => void;\r\n    hasPrevious: boolean;\r\n    hasNext: boolean;\r\n};\r\n\r\ntype PlayerContextProviderProps = {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const PlayerContext = createContext({} as PlayerContextData);\r\n\r\n\r\nexport function PlayerContextProvider({ children }: PlayerContextProviderProps){\r\n    const [episodeList, setEpisodeList] = useState([]);\r\n    const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    function play(episode) {\r\n        setEpisodeList([episode]);\r\n        setCurrentEpisodeIndex(0);\r\n        setIsPlaying(true);\r\n    }\r\n\r\n    function playList(List: Episode[], index: number) {\r\n        setEpisodeList(List);\r\n        setCurrentEpisodeIndex(index);\r\n        setIsPlaying(true);\r\n    }\r\n\r\n    function togglePlay() {\r\n        setIsPlaying(!isPlaying);\r\n    }\r\n\r\n    function setPlayingState(state: boolean) {\r\n        setIsPlaying(state);\r\n    }\r\n\r\n    const hasPrevious = currentEpisodeIndex > 0;\r\n    const hasNext = (currentEpisodeIndex + 1) < episodeList.length;\r\n\r\n    function playNext() {\r\n        if (hasNext) {\r\n        setCurrentEpisodeIndex(currentEpisodeIndex + 1);\r\n        }\r\n    }\r\n\r\n    function playPrevious() {\r\n        if (hasPrevious) {\r\n        setCurrentEpisodeIndex(currentEpisodeIndex - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PlayerContext.Provider value={{\r\n            episodeList,\r\n            currentEpisodeIndex,\r\n            playPrevious,\r\n            play,\r\n            playList,\r\n            playNext,\r\n            isPlaying,\r\n            togglePlay,\r\n            setPlayingState,\r\n            hasNext,\r\n            hasPrevious,\r\n        }}>\r\n            {children}\r\n        </PlayerContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}