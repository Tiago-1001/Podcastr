{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desenvonvimento Web\\\\Rocketseat\\\\AulasNLW\\\\podcastrnext\\\\src\\\\components\\\\Player\\\\index.tsx\";\nimport Image from 'next/image';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayContext';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from './styles.module.scss';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleEpisodeEnded() {}\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.title1,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              backgroundColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false),\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          className: styles.playButton,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Desenvonvimento Web/Rocketseat/AulasNLW/podcastrnext/src/components/Player/index.tsx"],"names":["Image","Slider","useEffect","useRef","useState","usePlayer","convertDurationToTimeString","styles","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleEpisodeEnded","handleSeek","amount","episode","playerContainer","title1","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\r\nimport Slider from 'rc-slider';\r\n\r\nimport 'rc-slider/assets/index.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { usePlayer } from '../../contexts/PlayContext';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nexport function Player() {\r\n    const audioRef = useRef<HTMLAudioElement>(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const {\r\n        episodeList,\r\n        currentEpisodeIndex,\r\n        isPlaying,\r\n        isLooping,\r\n        isShuffling,\r\n        togglePlay,\r\n        toggleLoop,\r\n        toggleShuffle,\r\n        setPlayingState,\r\n        playNext,\r\n        playPrevious,\r\n        hasNext,\r\n        hasPrevious,\r\n    } = usePlayer();\r\n\r\n    useEffect(() => {\r\n        if (!audioRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (isPlaying) {\r\n            audioRef.current.play();\r\n        } else {\r\n            audioRef.current.pause();\r\n        }\r\n    }, [isPlaying])\r\n\r\n    function setupProgressListener() {\r\n        audioRef.current.currentTime = 0;\r\n\r\n        audioRef.current.addEventListener('timeupdate', () => {\r\n            setProgress(Math.floor(audioRef.current.currentTime));\r\n        });\r\n    }\r\n\r\n    function handleEpisodeEnded() {\r\n        \r\n    }\r\n\r\n    function handleSeek(amount: number) {\r\n        audioRef.current.currentTime = amount;\r\n        setProgress(amount);\r\n    }\r\n\r\n    const episode = episodeList[currentEpisodeIndex]\r\n\r\n    return (\r\n        <div className={styles.playerContainer}>\r\n            <header className={styles.title1}>\r\n                <img src=\"/playing.svg\" alt=\"Tocando agora\" />\r\n                <strong>Tocando agora </strong>\r\n            </header>\r\n\r\n            { episode ? (\r\n                <div className={styles.currentEpisode}>\r\n                    <Image\r\n                        width={592}\r\n                        height={592}\r\n                        src={episode.thumbnail}\r\n                        objectFit=\"cover\"\r\n                    />\r\n                    <strong>{episode.title}</strong>\r\n                    <span>{episode.members}</span>\r\n                </div>\r\n            ) : (\r\n                <div className={styles.emptyPlayer}>\r\n                    <strong>Selecione um podcast para ouvir</strong>\r\n                </div>\r\n            )}\r\n\r\n            <footer className={!episode ? styles.empty : ''}>\r\n                <div className={styles.progress}>\r\n                <span>{convertDurationToTimeString(progress)}</span>\r\n                    <div className={styles.slider}>\r\n                        {episode ? (\r\n                            <Slider\r\n                                max={episode.duration}\r\n                                value={progress}\r\n                                onChange={handleSeek}\r\n                                trackStyle={{ backgroundColor: '#04d361' }}\r\n                                railStyle={{ backgroundColor: '#9f75ff' }}\r\n                                handleStyle={{ backgroundColor: '#04d361', borderWidth: 4 }}\r\n                            />\r\n                        ) : (\r\n                            <div className={styles.emptySlider} />\r\n                        )}\r\n                    </div>\r\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n                </div>\r\n\r\n                {episode && (\r\n                    <audio\r\n                        src={episode.url}\r\n                        ref={audioRef}\r\n                        loop={isLooping}\r\n                        autoPlay\r\n                        onEnded={handleEpisodeEnded}\r\n                        onPlay={() => setPlayingState(true)}\r\n                        onPause={() => setPlayingState(false)}\r\n                        onLoadedMetadata={setupProgressListener}\r\n                    />\r\n                )}\r\n\r\n                <div className={styles.buttons}>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode || episodeList.length === 1}\r\n                        onClick={toggleShuffle}\r\n                        className={isShuffling ? styles.isActive : ''}\r\n                    >\r\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\r\n                    </button>\r\n                    <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\r\n                        <img src=\"/play-previous.svg\" alt=\"Tocar Anterior\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode}\r\n                        className={styles.playButton}\r\n                        onClick={togglePlay}\r\n                    >\r\n                        {isPlaying\r\n                            ? <img src=\"/pause.svg\" alt=\"Tocar\" />\r\n                            : <img src=\"/play.svg\" alt=\"Tocar\" />}\r\n                    </button>\r\n                    <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\r\n                        <img src=\"/play-next.svg\" alt=\"Tocar próxima\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode}\r\n                        onClick={toggleLoop}\r\n                        className={isLooping ? styles.isActive : ''}\r\n                    >\r\n                        <img src=\"/repeat.svg\" alt=\"Repetir\" />\r\n                    </button>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}